<?php

use Doctrine\Common\ClassLoader;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Tools\Setup;

/**
 * Doctrine wrapper library for CodeIgniter
 *
 * @package  CodeIgniter
 * @category Library
 * @author	 Adam Elsodaney  <archfizz.co.uk>
 * @author   Rougin Gutib 	<rougingutib@gmail.com>
 * @link	 http://stackoverflow.com/questions/17121997/integrating-doctrine-with-codeigniter
 */
class Doctrine
{

	/**
	 * The variable for handling the entity manager
	 */
	public $entity_manager;

	/**
	 * Load the entity manager and load the classes
	 */
	public function __construct()
	{
		/**
		 * Load the database configuration from CodeIgniter
		 */
		
		require APPPATH . 'config/database.php';

		$connection_options = array(
			'driver'        => 'pdo_mysql',
			'user'          => $db['default']['username'],
			'password'      => $db['default']['password'],
			'host'          => $db['default']['hostname'],
			'dbname'        => $db['default']['database'],
			'charset'       => $db['default']['char_set'],
			'driverOptions' => array(
				'charset'   => $db['default']['char_set'],
			),
		);

		/**
		 * With this configuration, your model files need to be in application/models/
		 * e.g. Creating a new \User loads the class from application/models/User.php
		 */
		
		$metadata_paths   = array(APPPATH . 'models');
		$models           = APPPATH . 'models';
		$models_namespace = '';
		$proxies          = APPPATH . 'models/proxies';

		/**
		 * Set $dev_mode to TRUE to disable caching while you develop
		 */
		
		$config = Setup::createAnnotationMetadataConfiguration($metadata_paths, $dev_mode = true, $proxies);
		$this->entity_manager = EntityManager::create($connection_options, $config);

		$loader = new ClassLoader($models_namespace, $models);
		$loader->register();
	}

	/**
	 * The Command Line Interface (CLI) configuration for Doctrine
	 * 
	 * @return object
	 */
	public function cli()
	{
		foreach ($GLOBALS as $helper_set_candidate)
		{
			if ($helper_set_candidate instanceof \Symfony\Component\Console\Helper\HelperSet)
			{
				$helperSet = $helper_set_candidate;
				break;
			}
		}

		$helperSet = new \Symfony\Component\Console\Helper\HelperSet(array(
			'db' => new \Doctrine\DBAL\Tools\Console\Helper\ConnectionHelper($this->entity_manager->getConnection()),
			'em' => new \Doctrine\ORM\Tools\Console\Helper\EntityManagerHelper($this->entity_manager)
		));

		return \Doctrine\ORM\Tools\Console\ConsoleRunner::run($helperSet);
	}

}