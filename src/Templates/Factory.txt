<?php defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * [model] Factory Class
 */

class [model]_factory
{

	private $_ci;

	/**
	 * List of column names that you want to include in the 
	 * keywords for searching data
	 */
	protected $_columns = array(
		[columnKeywords]
	);

	/**
	 * Class constructor
	 */
	public function __construct()
	{
		$this->_ci =& get_instance();

		$this->_ci->load->database();
		$this->_ci->load->model(array(
			'[singular]'
		));
	}

	/**
	 * Return all row from the specified table
	 *
	 * @param  array   $delimiters
	 * @param  boolean $count
	 * @return object | boolean
	 */
	public function all($delimiters = array(), $count = FALSE)
	{
		if (isset($delimiters['keyword']) && $delimiters['keyword'] != NULL)
		{
			$this->_find_by_keyword($delimiters['keyword']);
		}

		if (isset($delimiters['per_page']) && $delimiters['per_page'] != NULL)
		{
			$this->_ci->db->limit($delimiters['per_page'], $delimiters['page']);
		}

		$query = $this->_ci->db->select('*')->from('[singular]')->get();

		if ($query->num_rows() > 0)
		{
			if ($count)
			{
				return $query->num_rows();
			}

			$rows = array();
			
			foreach ($query->result() as $row)
			{
				$rows[] = $this->_create_object($row);
			}
			
			return $rows;
		}
		
		return array();
	}

	/**
	 * Find the row from the specified ID
	 * 
	 * @param  integer $id
	 * @return object | boolean
	 */
	public function find($id)
	{
		$query = $this->_ci->db->get_where('[singular]', array('[primaryKey]' => $id));

		if ($query->num_rows() > 0)
		{
			return $this->_create_object($query->row());
		}

		return FALSE;
	}

	/**
	 * List all data in dropdown format
	 * 
	 * @return array
	 */
	public function select()
	{
		$[plural] = array('');

		foreach ($this->all() as $[singular]) {
			$[plural][$[singular]->get_[primaryKey]()] = $[singular]->/* Column to be displayed in the dropdown */;
		}

		return $[plural];
	}

	/**
	 * Create an object from the specified data
	 * 
	 * @param  object $row
	 * @return [className]
	 */
	protected function _create_object($row)
	{
		$[singular] = new [className]();
		[methods]		
		return $[singular];
	}

	/**
	 * Search for keywords based on the list of columns in the storage
	 * 
	 * @param string $keyword
	 */
	protected function _find_by_keyword($keyword)
	{
		if ($keyword != NULL)
		{
			$keywords = explode(' ', $keyword);

			foreach ($keywords as $keyword)
			{
				foreach ($this->_columns as $column)
				{
					$this->_ci->db->or_like($column, $keyword);
				}
			}
		}
	}

}

/* End of file [model]_factory.php */
/* Location: ./application/factories/[model]_factory.php */