<?php defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * [controllerName] Controller Class
 */

class [controller] extends CI_Controller {

	public function __construct()
	{
		parent::__construct();

		$this->load->model(array(
			[models]
		));
	}

	/**
	 * Show the form for creating a new [singularText]
	 */
	public function create()
	{
		$this->_validate_input();

		if ($this->form_validation->run())
		{
			[columnsOnCreate]

			$this->[singular]->save();

			$this->session->set_flashdata('notification', 'The [singularText] has been created successfully!');
			$this->session->set_flashdata('alert', 'success');

			redirect('[plural]');
		}

		[dropdownColumnsOnCreate]

		$this->load->view('[plural]/create', $data);
	}

	/**
	 * Delete the specified [singularText] from storage
	 * 
	 * @param  int $id
	 */
	public function delete($id)
	{
		if ( ! isset($id)) redirect('[plural]');

		$this->factory->delete('[singular]', array('[primaryKey]' => $id));

		$this->session->set_flashdata('notification', 'The [singularText] has been deleted successfully!');
		$this->session->set_flashdata('alert', 'success');

		redirect('[plural]');
	}

	/**
	 * Show the form for editing the specified [singularText]
	 * 
	 * @param  int $id
	 */
	public function edit($id)
	{
		if ( ! isset($id)) redirect('[plural]');

		$this->_validate_input();

		if ($this->form_validation->run())
		{
			$[singular] = $this->factory->find('[singular]', array('[primaryKey]' => $id));

			[columnsOnEdit]

			$[singular]->save();

			$this->session->set_flashdata('notification', 'The [singularText] has been updated successfully!');
			$this->session->set_flashdata('alert', 'success');

			redirect('[plural]');
		}

		[dropdownColumnsOnEdit]

		$this->load->view('[plural]/edit', $data);
	}

	/**
	 * Display a listing of [plural]
	 */
	public function index()
	{
		$this->load->library('pagination');

		include APPPATH . 'config/pagination.php';

		$delimiters['keyword'] = $this->input->get('keyword');

		$config['first_url']  = '1?keyword=' . $delimiters['keyword'];
		$config['suffix']     = '?keyword=' . $delimiters['keyword'];
		$config['total_rows'] = $this->factory->get_all('[singular]', $delimiters)->total_rows();

		$this->pagination->initialize($config);

		$delimiters['page']     = $this->pagination->offset;
		$delimiters['per_page'] = $config['per_page'];

		$data['[plural]'] = $this->factory->get_all('[singular]', $delimiters)->result();
		$data['links'] = $this->pagination->create_links();

		$this->load->view('[plural]/index', $data);
	}

	/**
	 * Display the specified [singularText]
	 * 
	 * @param  int $id
	 */
	public function show($id)
	{
		if ( ! isset($id)) redirect('[plural]');
		
		$data['[singular]'] = $this->factory->find('[singular]', array('[primaryKey]' => $id));

		$this->load->view('[plural]/show', $data);
	}

	/**
	 * Validate the input retrieved from the view
	 */
	private function _validate_input()
	{
		$this->load->library('form_validation');

		$columns = array(
			[columnsToValidate]
		);

		foreach ($columns as $column => $label)
		{
			$rules = (strpos($column, 'email') !== FALSE) ? 'required|valid_email' : 'required';

			$this->form_validation->set_rules($column, $label, $rules);
		}
	}

}